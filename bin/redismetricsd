#!/usr/bin/env ruby

require 'redismetrics'
require 'redismetrics/plugins/sidekiq_monitor'
require 'logger'

STDOUT.sync     = true
logger          = Logger.new(STDOUT)
redis_url       = ENV.fetch('REDIS_URL')
redis_ts_url    = ENV.fetch('REDIS_TS_URL')
interval        = ENV.fetch('INTERVAL', '60').to_f
retention       = ENV.fetch('RETENTION', 7 * 86_400).to_f
reconnect_pause = ENV.fetch('RECONNECT_PAUSE', 30).to_f
skip_queue      = ENV.fetch('SKIP_QUEUE', '\z\A')
plugins         = ENV.fetch('PLUGINS', '').split(?,).map {
  Redismetrics::Plugins.const_get(_1).new(redis_url:, redis_ts_url:, retention:, reconnect_pause:, skip_queue:, logger:)
}
logger.info "Monitoring sidekiq operating on #{redis_url.inspect} with "\
  "plugins #{plugins.map(&:class) * ?,} now (retention=#{retention}s, interval=#{interval}s, reconnect_pause=#{reconnect_pause}s)…\n"\
  "Skipping all queues matching /#{skip_queue}/"
loop do
  start = Time.now
  plugins.each do |plugin|
    logger.info "Performing monitoring with plugin #{plugin.class} now."
    plugin.perform
  end
  duration = [ interval - (Time.now - start).to_f, 0 ].max
  logger.info "Sleeping for #{'%.2f' % duration}s now: Zzz…"
  sleep duration
end
